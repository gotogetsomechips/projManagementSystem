<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.mapper.TaskMapper">
    <resultMap id="BaseResultMap" type="store.bean.Task">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="creator_id" property="creatorId" jdbcType="INTEGER"/>
        <result column="creator_name" property="creatorName" jdbcType="VARCHAR"/>
        <result column="executor_id" property="executorId" jdbcType="INTEGER"/>
        <result column="executor_name" property="executorName" jdbcType="VARCHAR"/>
        <result column="priority" property="priority" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, title, content, create_time, creator_id, creator_name, executor_id, executor_name,
        priority, status, start_time, end_time, update_time
    </sql>

    <insert id="insert" parameterType="store.bean.Task" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO task (
            title, content, create_time, creator_id, creator_name,
            executor_id, executor_name, priority, status
        ) VALUES (
                     #{title}, #{content}, NOW(), #{creatorId}, #{creatorName},
                     #{executorId}, #{executorName}, #{priority}, #{status}
                 )
    </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM task WHERE id = #{id}
    </delete>

    <delete id="deleteByIds">
        DELETE FROM task WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="store.bean.Task">
        UPDATE task SET
                        title = #{title},
                        content = #{content},
                        executor_id = #{executorId},
                        executor_name = #{executorName},
                        priority = #{priority},
                        status = #{status},
                        update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="selectById" parameterType="int" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM task WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM task
    </select>

    <select id="selectByCondition" parameterType="store.bean.Task" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM task
        <where>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="creatorName != null and creatorName != ''">
                AND creator_name LIKE CONCAT('%', #{creatorName}, '%')
            </if>
            <if test="executorName != null and executorName != ''">
                AND executor_name LIKE CONCAT('%', #{executorName}, '%')
            </if>
            <if test="priority != null">
                AND priority = #{priority}
            </if>
        </where>
    </select>

    <select id="countByTitle" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM task WHERE title = #{title}
    </select>

    <select id="selectWithOrder" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM task
        <if test="orderBy != null and orderBy != ''">
            ORDER BY ${orderBy}
        </if>
    </select>
</mapper>