<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.mapper.SalaryMapper">
    <resultMap id="BaseResultMap" type="store.bean.Salary">
        <id column="id" property="id" />
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="year" property="year" />
        <result column="month" property="month" />
        <result column="base_salary" property="baseSalary" />
        <result column="bonus" property="bonus" />
        <result column="deduction" property="deduction" />
        <result column="total_salary" property="totalSalary" />
        <result column="actual_salary" property="actualSalary" />
        <result column="status" property="status" />
        <result column="payment_by" property="paymentBy" />
        <result column="payment_time" property="paymentTime" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_by" property="createBy" />
        <result column="update_by" property="updateBy" />
    </resultMap>

    <sql id="Base_Column_List">
        id, employee_id, employee_name, year, month, base_salary, bonus, deduction,
        total_salary, actual_salary, status, payment_by, payment_time, remark,
        create_time, update_time, create_by, update_by
    </sql>

    <insert id="insert" parameterType="store.bean.Salary" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_salary (
            employee_id, employee_name, year, month, base_salary, bonus, deduction,
            total_salary, actual_salary, status, payment_by, payment_time, remark,
            create_by, create_time, update_time
        ) VALUES (
                     #{employeeId}, #{employeeName}, #{year}, #{month}, #{baseSalary}, #{bonus}, #{deduction},
                     #{totalSalary}, #{actualSalary}, #{status}, #{paymentBy}, #{paymentTime}, #{remark},
                     #{createBy}, NOW(), NOW()
                 )
    </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM sys_salary WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM sys_salary WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="store.bean.Salary">
        UPDATE sys_salary
        <set>
            <if test="employeeId != null">employee_id = #{employeeId},</if>
            <if test="employeeName != null">employee_name = #{employeeName},</if>
            <if test="year != null">year = #{year},</if>
            <if test="month != null">month = #{month},</if>
            <if test="baseSalary != null">base_salary = #{baseSalary},</if>
            <if test="bonus != null">bonus = #{bonus},</if>
            <if test="deduction != null">deduction = #{deduction},</if>
            <if test="totalSalary != null">total_salary = #{totalSalary},</if>
            <if test="actualSalary != null">actual_salary = #{actualSalary},</if>
            <if test="status != null">status = #{status},</if>
            <if test="paymentBy != null">payment_by = #{paymentBy},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <select id="selectById" parameterType="int" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        ORDER BY id DESC
    </select>

    <select id="selectByCondition" parameterType="store.bean.Salary" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        <where>
            <if test="employeeId != null">
                AND employee_id = #{employeeId}
            </if>
            <if test="employeeName != null and employeeName != ''">
                AND employee_name LIKE CONCAT('%', #{employeeName}, '%')
            </if>
            <if test="year != null">
                AND year = #{year}
            </if>
            <if test="month != null">
                AND month = #{month}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY id DESC
    </select>

    <select id="countByEmployeeYearMonth" resultType="int">
        SELECT COUNT(*) FROM sys_salary
        WHERE employee_id = #{employeeId} AND year = #{year} AND month = #{month}
    </select>

    <!-- 分页相关方法 -->
    <select id="selectAllWithPagination" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        ORDER BY id DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="selectByConditionWithPagination" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        <where>
            <if test="condition.employeeId != null">
                AND employee_id = #{condition.employeeId}
            </if>
            <if test="condition.employeeName != null and condition.employeeName != ''">
                AND employee_name LIKE CONCAT('%', #{condition.employeeName}, '%')
            </if>
            <if test="condition.year != null">
                AND year = #{condition.year}
            </if>
            <if test="condition.month != null">
                AND month = #{condition.month}
            </if>
            <if test="condition.status != null">
                AND status = #{condition.status}
            </if>
        </where>
        ORDER BY id DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="selectAllOrderByWithPagination" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        ORDER BY ${orderBy}
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="selectByConditionOrderByWithPagination" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        <where>
            <if test="condition.employeeId != null">
                AND employee_id = #{condition.employeeId}
            </if>
            <if test="condition.employeeName != null and condition.employeeName != ''">
                AND employee_name LIKE CONCAT('%', #{condition.employeeName}, '%')
            </if>
            <if test="condition.year != null">
                AND year = #{condition.year}
            </if>
            <if test="condition.month != null">
                AND month = #{condition.month}
            </if>
            <if test="condition.status != null">
                AND status = #{condition.status}
            </if>
        </where>
        ORDER BY ${orderBy}
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="getFixedOrderSalaryIds" resultType="int">
        SELECT id FROM sys_salary
        <where>
            <if test="condition.employeeId != null">
                AND employee_id = #{condition.employeeId}
            </if>
            <if test="condition.employeeName != null and condition.employeeName != ''">
                AND employee_name LIKE CONCAT('%', #{condition.employeeName}, '%')
            </if>
            <if test="condition.year != null">
                AND year = #{condition.year}
            </if>
            <if test="condition.month != null">
                AND month = #{condition.month}
            </if>
            <if test="condition.status != null">
                AND status = #{condition.status}
            </if>
        </where>
        ORDER BY ${orderBy}
    </select>

    <select id="getSalariesByIds" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_salary
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY FIELD(id,
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM sys_salary
    </select>

    <select id="countByCondition" parameterType="store.bean.Salary" resultType="int">
        SELECT COUNT(*) FROM sys_salary
        <where>
            <if test="employeeId != null">
                AND employee_id = #{employeeId}
            </if>
            <if test="employeeName != null and employeeName != ''">
                AND employee_name LIKE CONCAT('%', #{employeeName}, '%')
            </if>
            <if test="year != null">
                AND year = #{year}
            </if>
            <if test="month != null">
                AND month = #{month}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <update id="updateStatusById">
        UPDATE sys_salary
        SET status = #{status},
            payment_by = #{paymentBy},
            payment_time = NOW(),
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="batchUpdateStatus">
        UPDATE sys_salary
        SET status = #{status},
        payment_by = #{paymentBy},
        payment_time = NOW(),
        update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="countByEmployeeNameYearMonth" resultType="int">
        SELECT COUNT(*) FROM sys_salary
        WHERE employee_name = #{employeeName} AND year = #{year} AND month = #{month}
    </select>

    <select id="countByEmployeeName" resultType="int">
        SELECT COUNT(*) FROM sys_salary
        WHERE employee_name = #{employeeName}
    </select>
</mapper>